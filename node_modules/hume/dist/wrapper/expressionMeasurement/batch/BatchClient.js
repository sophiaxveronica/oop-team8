"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BatchClient = void 0;
const Client_1 = require("../../../api/resources/expressionMeasurement/resources/batch/client/Client");
const Job_1 = require("./Job");
class BatchClient extends Client_1.Batch {
    startInferenceJob(request = {}, requestOptions) {
        const _super = Object.create(null, {
            startInferenceJob: { get: () => super.startInferenceJob }
        });
        return __awaiter(this, void 0, void 0, function* () {
            const { jobId } = yield _super.startInferenceJob.call(this, request, requestOptions);
            return new Job_1.Job(jobId, this);
        });
    }
}
exports.BatchClient = BatchClient;
