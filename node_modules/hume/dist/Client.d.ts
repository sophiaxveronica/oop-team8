/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "./environments";
import * as core from "./core";
import { CustomModels } from "./api/resources/customModels/client/Client";
import { EmpathicVoice } from "./api/resources/empathicVoice/client/Client";
import { ExpressionMeasurement } from "./api/resources/expressionMeasurement/client/Client";
export declare namespace HumeClient {
    interface Options {
        environment?: core.Supplier<environments.HumeEnvironment | string>;
        apiKey?: core.Supplier<string | undefined>;
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
        abortSignal?: AbortSignal;
    }
}
export declare class HumeClient {
    protected readonly _options: HumeClient.Options;
    constructor(_options?: HumeClient.Options);
    protected _customModels: CustomModels | undefined;
    get customModels(): CustomModels;
    protected _empathicVoice: EmpathicVoice | undefined;
    get empathicVoice(): EmpathicVoice;
    protected _expressionMeasurement: ExpressionMeasurement | undefined;
    get expressionMeasurement(): ExpressionMeasurement;
}
