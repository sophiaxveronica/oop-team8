/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../../../../index";
import * as Hume from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { StreamDataModelsFace } from "./StreamDataModelsFace";
import { StreamDataModelsLanguage } from "./StreamDataModelsLanguage";
export declare const StreamDataModels: core.serialization.ObjectSchema<serializers.expressionMeasurement.StreamDataModels.Raw, Hume.expressionMeasurement.StreamDataModels>;
export declare namespace StreamDataModels {
    interface Raw {
        burst?: Record<string, unknown> | null;
        face?: StreamDataModelsFace.Raw | null;
        facemesh?: Record<string, unknown> | null;
        language?: StreamDataModelsLanguage.Raw | null;
        prosody?: Record<string, unknown> | null;
    }
}
