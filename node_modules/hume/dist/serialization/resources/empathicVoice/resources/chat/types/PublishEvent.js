"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PublishEvent = void 0;
const core = __importStar(require("../../../../../../core"));
const AudioInput_1 = require("../../../types/AudioInput");
const SessionSettings_1 = require("../../../types/SessionSettings");
const UserInput_1 = require("../../../types/UserInput");
const AssistantInput_1 = require("../../../types/AssistantInput");
const ToolResponseMessage_1 = require("../../../types/ToolResponseMessage");
const ToolErrorMessage_1 = require("../../../types/ToolErrorMessage");
const PauseAssistantMessage_1 = require("../../../types/PauseAssistantMessage");
const ResumeAssistantMessage_1 = require("../../../types/ResumeAssistantMessage");
exports.PublishEvent = core.serialization.undiscriminatedUnion([
    AudioInput_1.AudioInput,
    SessionSettings_1.SessionSettings,
    UserInput_1.UserInput,
    AssistantInput_1.AssistantInput,
    ToolResponseMessage_1.ToolResponseMessage,
    ToolErrorMessage_1.ToolErrorMessage,
    PauseAssistantMessage_1.PauseAssistantMessage,
    ResumeAssistantMessage_1.ResumeAssistantMessage,
]);
