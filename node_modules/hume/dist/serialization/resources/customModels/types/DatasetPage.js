"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatasetPage = void 0;
const core = __importStar(require("../../../../core"));
const ReturnDataset_1 = require("./ReturnDataset");
const PageableObject_1 = require("./PageableObject");
const SortObject_1 = require("./SortObject");
exports.DatasetPage = core.serialization.object({
    content: core.serialization.list(ReturnDataset_1.ReturnDataset).optional(),
    pageable: PageableObject_1.PageableObject.optional(),
    total: core.serialization.number().optional(),
    last: core.serialization.boolean().optional(),
    totalElements: core.serialization.property("total_elements", core.serialization.number().optional()),
    totalPages: core.serialization.property("total_pages", core.serialization.number().optional()),
    size: core.serialization.number().optional(),
    number: core.serialization.number().optional(),
    sort: SortObject_1.SortObject.optional(),
    first: core.serialization.boolean().optional(),
    numberOfElements: core.serialization.property("number_of_elements", core.serialization.number().optional()),
    empty: core.serialization.boolean().optional(),
});
