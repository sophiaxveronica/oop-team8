import { HumeClient as FernClient } from "../Client";
import { EmpathicVoice } from "./empathicVoice/EmpathicVoiceClient";
import { ExpressionMeasurement } from "./expressionMeasurement/ExpressionMeasurementClient";
export declare namespace HumeClient {
    interface Options extends FernClient.Options {
        secretKey?: string;
    }
}
export declare class HumeClient extends FernClient {
    protected readonly _options: HumeClient.Options;
    constructor(_options?: HumeClient.Options);
    protected _expressionMeasurement: ExpressionMeasurement | undefined;
    get expressionMeasurement(): ExpressionMeasurement;
    protected _empathicVoice: EmpathicVoice | undefined;
    get empathicVoice(): EmpathicVoice;
}
