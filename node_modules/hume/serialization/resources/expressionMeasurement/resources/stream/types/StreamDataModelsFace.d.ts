/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../../../../index";
import * as Hume from "../../../../../../api/index";
import * as core from "../../../../../../core";
export declare const StreamDataModelsFace: core.serialization.ObjectSchema<serializers.expressionMeasurement.StreamDataModelsFace.Raw, Hume.expressionMeasurement.StreamDataModelsFace>;
export declare namespace StreamDataModelsFace {
    interface Raw {
        facs?: Record<string, unknown> | null;
        descriptions?: Record<string, unknown> | null;
        identify_faces?: boolean | null;
        fps_pred?: number | null;
        prob_threshold?: number | null;
        min_face_size?: number | null;
    }
}
