"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscribeEvent = void 0;
const core = __importStar(require("../../../../../../core"));
const AssistantEnd_1 = require("../../../types/AssistantEnd");
const AssistantMessage_1 = require("../../../types/AssistantMessage");
const AudioOutput_1 = require("../../../types/AudioOutput");
const ChatMetadata_1 = require("../../../types/ChatMetadata");
const Error_1 = require("../../../types/Error_");
const UserInterruption_1 = require("../../../types/UserInterruption");
const UserMessage_1 = require("../../../types/UserMessage");
const ToolCallMessage_1 = require("../../../types/ToolCallMessage");
const ToolResponseMessage_1 = require("../../../types/ToolResponseMessage");
const ToolErrorMessage_1 = require("../../../types/ToolErrorMessage");
exports.SubscribeEvent = core.serialization.undiscriminatedUnion([
    AssistantEnd_1.AssistantEnd,
    AssistantMessage_1.AssistantMessage,
    AudioOutput_1.AudioOutput,
    ChatMetadata_1.ChatMetadata,
    Error_1.Error_,
    UserInterruption_1.UserInterruption,
    UserMessage_1.UserMessage,
    ToolCallMessage_1.ToolCallMessage,
    ToolResponseMessage_1.ToolResponseMessage,
    ToolErrorMessage_1.ToolErrorMessage,
]);
