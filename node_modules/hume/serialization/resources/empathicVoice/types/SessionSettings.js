"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SessionSettings = void 0;
const core = __importStar(require("../../../../core"));
const AudioConfiguration_1 = require("./AudioConfiguration");
const BuiltinToolConfig_1 = require("./BuiltinToolConfig");
const Context_1 = require("./Context");
const Tool_1 = require("./Tool");
exports.SessionSettings = core.serialization.object({
    audio: AudioConfiguration_1.AudioConfiguration.optional(),
    builtinTools: core.serialization.property("builtin_tools", core.serialization.list(BuiltinToolConfig_1.BuiltinToolConfig).optional()),
    context: Context_1.Context.optional(),
    customSessionId: core.serialization.property("custom_session_id", core.serialization.string().optional()),
    languageModelApiKey: core.serialization.property("language_model_api_key", core.serialization.string().optional()),
    systemPrompt: core.serialization.property("system_prompt", core.serialization.string().optional()),
    tools: core.serialization.list(Tool_1.Tool).optional(),
    type: core.serialization.stringLiteral("session_settings"),
});
