/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import * as Hume from "../../../../../index";
export declare namespace Jobs {
    interface Options {
        environment?: core.Supplier<environments.HumeEnvironment | string>;
        apiKey?: core.Supplier<string | undefined>;
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
        abortSignal?: AbortSignal;
    }
}
export declare class Jobs {
    protected readonly _options: Jobs.Options;
    constructor(_options?: Jobs.Options);
    /**
     * Start a new custom models training job.
     *
     * @param {Hume.customModels.TrainingBaseRequest} request
     * @param {Jobs.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.customModels.jobs.startTrainingJob({
     *         customModel: {
     *             name: "name"
     *         },
     *         dataset: {
     *             id: "id"
     *         }
     *     })
     */
    startTrainingJob(request: Hume.customModels.TrainingBaseRequest, requestOptions?: Jobs.RequestOptions): Promise<Hume.customModels.JobId>;
    /**
     * Start a new custom models inference job.
     *
     * @param {Hume.customModels.TlInferenceBaseRequest} request
     * @param {Jobs.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.customModels.jobs.startCustomModelsInferenceJob({
     *         customModel: {
     *             id: "id"
     *         }
     *     })
     */
    startCustomModelsInferenceJob(request: Hume.customModels.TlInferenceBaseRequest, requestOptions?: Jobs.RequestOptions): Promise<Hume.customModels.JobId>;
    protected _getCustomAuthorizationHeaders(): Promise<{
        "X-Hume-Api-Key": string | undefined;
    }>;
}
